---
# This playbook contains all actions that will be run

- name: Ensure old versions of Docker are not installed.
  package:
    name:
      - docker
      - docker-engine
    state: absent

- name: Ensure dependencies are installed.
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
    state: latest
    install_recommends: no

- include_tasks: "pip.yml"

#- name: Only run "update_cache=yes" if the last one is more than 3600 seconds ago
#  apt:
#    update_cache: yes
#    cache_valid_time: 3600

- name: Add Docker apt key.
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present
  register: add_repository_key
  ignore_errors: yes

- name: Add Docker repository.
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
    state: present
    update_cache: yes

#- name: Install Docker Compose (if configured).
#  become: true
#  become_method: sudo
#  get_url:
#    url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
#    dest: "{{ docker_compose_path }}"
#    mode: 755
#
#- name: Remove useless apt packages from the cache
#  become: true
#  become_method: sudo
#  apt:
#    autoclean: yes

- name: Ensure docker group is exist
  become: true
  become_method: sudo
  group:
    name: "docker"
    state: present

- include_tasks: "users.yml"  
  when: docker_users                              
